<?php
/**
 * @file
 */

include_once 'pw_cache.features.inc';

/**
 * Implement hook_expire_cache_alter().
 *
 */
function pw_cache_expire_urls_alter(&$expire, $node = NULL, $paths) {
    $altered_urls = array();
    foreach($expire as $url) {
        $url = strtolower($url);
        $altered_urls['https://www.abgeordnetenwatch.de/'.$url] = 'http://srv8.pwsrv.local/cache-purge/?url=https://www.abgeordnetenwatch.de/'.$url;
        $altered_urls['https://affiliate.abgeordnetenwatch.de/'.$url] = 'http://srv8.pwsrv.local/cache-purge/?url=https://affiliate.abgeordnetenwatch.de/'.$url;
    }
    $expire = $altered_urls;
}

/**
 * Implements hook_expire_cache().
 *
 * refreshes purged url
 */
function pw_cache_expire_cache($expire_urls) {

  // check if weight of purge module is lower than pw_cache
  $weight = db_select('system', 's')
            ->fields('s', array('name', 'weight'))
            ->condition('name', array('purge', 'pw_cache'), 'IN')
            ->execute()
            ->fetchAllKeyed();

  if($weight['purge'] >= $weight['pw_cache']){
    db_update('system')
    ->fields(array('weight' => $weight['purge'] + 1))
    ->condition('name', 'pw_cache', '=')
    ->execute();

    // purge should be executed first
    return;
  }

  foreach($expire_urls as $expire_url => $purge_url) {
    $url = parse_url($expire_url);
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    curl_setopt($ch, CURLOPT_URL, $url['scheme'].'://srv8.pwsrv.local'.$url['path']);
    curl_setopt($ch, CURLOPT_HEADER, 1);
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Host: '.$url['host']));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 0);
    $result = curl_exec($ch);
  }
}

